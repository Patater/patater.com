server {
       server_name mail.patater.com;
       return 301 https://patater.com/webmail/;
}

server {
       server_name www.patater.com static.patater.com;
       return 301 $scheme://patater.com$request_uri;
}

server {
       server_name patatersoft.info www.patatersoft.info;
       return 301 $scheme://patater.com$request_uri;
}

# URL-specific redirects. Shared by HTTP and HTTPS.
server {
       server_name patater.com;

       location = /manual.html {
               return 301 $scheme://$http_host/manual/;
       }
       location = /manual.php {
               return 301 $scheme://$http_host/manual/;
       }
       location = /Manual.pdf {
               return 301 $scheme://$http_host/manual/;
       }
       location = /manual_online.html {
               return 301 $scheme://$http_host/files/projects/manual/manual.html;
       }
       location = /files/projects/manual/ {
               return 301 $scheme://$http_host/files/projects/manual/manual.html;
       }
       location = /nintendods.html {
               return 301 $scheme://$http_host/projects/;
       }
       location = /nintendods.php {
               return 301 $scheme://$http_host/projects/;
       }
       location = /nintendods {
               return 301 $scheme://$http_host/projects/;
       }
       location = /boostds {
               return 301 $scheme://$http_host/boost-on-the-nintendo-ds;
       }
       location = /links.html {
               return 301 $scheme://$http_host/links/;
       }
       location = /links.php {
               return 301 $scheme://$http_host/links/;
       }
       location = /harvestcompo2006.html {
               return 301 $scheme://$http_host/homebrew-harvest-2006/;
       }
       location = /links/mightmax {
               return 301 $scheme://$http_host/links/mightymax/;
       }
       location = /links/mightymaxs-gbamp-multiboot {
               return 301 $scheme://$http_host/links/mightymaxs-gbamp-multiboot/;
       }
       location = /projects/boost-1.45.0_devkirarm-r32.zip {
               return 301 $scheme://$http_host/boost-1.45.0_devkitarm-r32.zip;
       }
}

# When the server is accessed over HTTP, we provide this stuff.
server {
       listen 80 default_server;
       listen [::]:80 default_server ipv6only=on;

       server_name patater.com;

       root /var/www/patater.com/htdocs;
       location / { }

       # Force https for private
       location /private/ {
               return 301 https://$http_host$request_uri;
       }
}

# When the server is accessed over HTTPS, we provide this stuff.
server {
       listen 443 ssl;
       ssl_certificate /etc/letsencrypt/live/patater.com/fullchain.pem;
       ssl_certificate_key /etc/letsencrypt/live/patater.com/privkey.pem;
       ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
       ssl_prefer_server_ciphers on;
       ssl_dhparam /etc/ssl/private/dhparams.pem;
       # add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
       add_header Strict-Transport-Security "max-age=15552000";


       server_name patater.com;

       index index.html index.htm index.php;

       root /var/www/patater.com/htdocs;
       location / { }

       # URL-specific redirects
       location /private/ {
         autoindex on;
         auth_basic "Restricted";
         auth_basic_user_file private.htpasswd;
       }

       location /secret/ {
         autoindex on;
         auth_basic "Restricted Secret";
         auth_basic_user_file private-secret.htpasswd;
       }
}
